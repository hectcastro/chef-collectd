#! /bin/bash
#
# collectd - start and stop the statistics collection daemon
# http://collectd.org/
#
# Copyright (C) 2005-2006 Florian Forster <octo@verplant.org>
# Copyright (C) 2006-2009 Sebastian Harl <tokkee@debian.org>
#

### BEGIN INIT INFO
# Provides:          collectd
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Should-Start:      $network $named $syslog $time
# Should-Stop:       $network $named $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start the statistics collection daemon
### END INIT INFO

PATH=/etc/collectd/sbin:/etc/collectd/bin:/sbin:/bin:/usr/sbin:/usr/bin

DISABLE=0

DESC="statistics collection and monitoring daemon"
NAME=collectd
DAEMON=/etc/collectd/sbin/collectd

CONFIGFILE=/etc/collectd/etc/collectd.conf
PIDFILE=/run/collectd.pid

USE_COLLECTDMON=1
COLLECTDMON_DAEMON=/etc/collectd/sbin/collectdmon
COLLECTDMON_PIDFILE=/run/collectdmon.pid

MAXWAIT=20

# Gracefully exit if the package has been removed.
test -x $DAEMON || exit 0

if [ -r /etc/default/$NAME ]; then
	. /etc/default/$NAME
fi

if test "$DISABLE" != 0 -a "$1" == "start"; then
	echo "$NAME has been disabled - see /etc/default/$NAME."
	exit 0
fi

if test ! -e "$CONFIGFILE" -a "$1" == "start"; then
	echo "Not starting $NAME - no configuration ($CONFIGFILE) found."
	exit 0
fi

if test "$ENABLE_COREFILES" == 1; then
	ulimit -c unlimited
fi

if test "$USE_COLLECTDMON" == 1; then
	_PIDFILE="$COLLECTDMON_PIDFILE"
else
	_PIDFILE="$PIDFILE"
fi

check_config() {
	if ! $DAEMON -t -C "$CONFIGFILE"; then
		if test -n "$1"; then
			echo "$1" >&2
		fi
		exit 1
	fi
}

d_start() {
	if test "$DISABLE" != 0; then
		# we get here during restart
		echo -n " - disabled by /etc/default/$NAME"
		return 0
	fi

	if test ! -e "$CONFIGFILE"; then
		# we get here during restart
		echo -n " - no configuration ($CONFIGFILE) found."
		return 0
	fi

	check_config

	if test "$USE_COLLECTDMON" == 1; then
		start-stop-daemon --start --quiet --oknodo --pidfile "$_PIDFILE" \
			--exec $COLLECTDMON_DAEMON -- -P "$_PIDFILE" -- -C "$CONFIGFILE"
	else
		start-stop-daemon --start --quiet --oknodo --pidfile "$_PIDFILE" \
			--exec $DAEMON -- -C "$CONFIGFILE" -P "$_PIDFILE"
	fi
}

still_running_warning="
WARNING: $NAME might still be running.
In large setups it might take some time to write all pending data to
the disk. You can adjust the waiting time in /etc/default/collectd."

d_stop() {
        echo ""
        COLLECTDPID=$(pidof collectd)
        COLLECTDMONPID=$(pidof collectdmon)
        if [ -n "${COLLECTDPID}" ] || [ -n "${COLLECTDMONPID}" ] ; then
          echo "stopping collectd"
          start-stop-daemon --stop --quiet --oknodo --pidfile "$_PIDFILE"
        else
          echo "collectd is not running"
          if [ -f $_PIDFILE ] ; then
            rm $_PIDFIILE
          fi
          return 0
        fi
        echo "Sleeping 10 seconds"
	sleep 10 
        echo  "gathering collectd pids"
        COLLECTDPID=$(/bin/pidof "collectd")
        COLLECTDMONPID=$(/bin/pidof "collectdmon")
        echo $COLLECTDPID
        echo $COLLECTDMONPID
        if [ -n "${COLLECTDPID}" ]; then
          echo "Killing PIDS"
          for p in $COLLECTDPID
          do
            echo "Killing $p..."
            kill -9 $p
          done
          if [ -f $_PIDFILE ] ; then
            rm $_PIDFIILE
          fi
        else
          if [ -f $_PIDFILE ] ; then
            rm $_PIDFIILE
          fi
        fi
        if [ -n "${COLLECTDMONPID}" ]; then
          echo "Killing PIDS"
          for p in $COLLECTDMONPID
          do
            echo "Killing $p..."
            kill -9 $p
          done
          if [ -f $_PIDFILE ] ; then
            rm $_PIDFIILE
          fi
        else
          if [ -f $_PIDFILE ] ; then
            rm $_PIDFIILE
          fi
        fi
}

d_status() {
	PID=$( cat "$_PIDFILE" 2> /dev/null ) || true

	if test -n "$PID" && kill -0 $PID 2> /dev/null; then
		echo "collectd ($PID) is running."
		exit 0
	else
		PID=$( pidof collectd ) || true

		if test -n "$PID"; then
			echo "collectd ($PID) is running."
			exit 0
		else
			echo "collectd is stopped."
		fi
	fi
	exit 1
}

case "$1" in
	start)
		echo -n "Starting $DESC: $NAME"
		d_start
		echo "."
		;;
	stop)
		echo "Stopping $DESC: $NAME"
		d_stop
		echo "."
		;;
	status)
		d_status
		;;
	restart|force-reload)
		echo -n "Restarting $DESC: $NAME"
		check_config "Not restarting collectd."
		d_stop
		sleep 1
		d_start
		echo "."
		;;
	*)
		echo "Usage: $0 {start|stop|restart|force-reload|status}" >&2
		exit 1
		;;
esac

exit 0

# vim: syntax=sh noexpandtab sw=4 ts=4 :
